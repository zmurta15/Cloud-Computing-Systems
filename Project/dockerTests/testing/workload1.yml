config:
  target: 'http://20.71.87.66/scc2223-tp1-1.0/rest'
  http:
    timeout: 10
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true  # new mode to aggregate metrics in artillery
  processor: "./test-utils.js"
  phases:
  - name: "Warm up"
    arrivalRate: 1         
    duration: 5
  - name: "Test"
    arrivalRate: 5         
    duration: 5

scenarios:
  - name: 'User checks own auctions'
    weight: 5
    flow:
      - function: "selectUserSkewed"
      - post:                          # First: login as a user
          url: "/user/auth"
          name: "POST:/user/auth"
          headers:
            Content-Type: application/json
          json:
            user: "{{ user }}"
            pwd: "{{ pwd }}"
      - get:                          # Get user auctions
          url: "/user/{{ user }}/listAuctions?status=OPEN"
          name: "GET:/user/*/listAuctions"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "auctionsLst"
      - loop:                                   # Check bids
        - get:                          # First: post image for the user
            url: "/media/{{ $loopElement.photoId }}.jpeg"
            name: "GET:/media"
            headers:
              Accept: application/octet-stream
        - get:
            url: "/auction/{{ $loopElement.id }}/bid"
            name: "GET:/auction/*/bid"
            headers: 
              Accept: application/json
        - get:
            url: "/auction/{{ $loopElement.id }}/question"
            name: "GET:/auction/*/question"
            headers: 
              Accept: application/json
            capture: 
              json: "$"
              as: "questionOne"

        - function: "decideToReply"
        - post:                          # New reply     
            url: "/auction/{{ $loopElement.id }}/question/{{ questionId }}/reply"
            name: "ÂªPOST:/auction/*/question/*/reply"
            headers:
              Content-Type: application/json
              Accept: application/json
            json:
              userId: "{{ user }}"
              text: "{{ reply }}"
            ifTrue: "questionId"
        over: "auctionsLst"

 